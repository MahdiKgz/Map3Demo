import { createSlice } from "@reduxjs/toolkit";
import { getSpeedFromTLE } from "../../utils/extractSppedTLE";

const initialState = {
  models: [
    {
      id: "car-1",
      url: "/models/car.glb",
      icon: "/models/car-icon.png",
      color: "#ff0000",
      speed: 0.0001,
      type: "vehicle",
      accidents: [
        {
          coordinates: [51.41448543802966, 35.73742673810442],
          duration: 60000,
          message: "این وسیله نقلیه دچار تصادف شده و برای یک دقیقه متوقف است",
        },
      ],
      route: [
        [51.41304932895744, 35.735820099430356],
        [51.412777895357124, 35.73660800276389],
        [51.41251617389713, 35.73738882679592],
        [51.41394220653021, 35.73779470299459],
        [51.41448543802966, 35.73742673810442],
        [51.414885189822, 35.73705018582386],
        [51.41505415071842, 35.73665857345925],
        [51.41522509768237, 35.736252572812916],
        [51.41536672629371, 35.73614724111049],
        [51.415570702471314, 35.7356554088024],
        [51.416067081804044, 35.73578800264035],
        [51.41598224145952, 35.73599871332375],
      ],
    },
    {
      id: "air-1",
      url: "/models/airplane_model.glb",
      icon: "/models/airplane-icon.png",
      color: "#ffaa00",
      speed: 0.0001,
      type: "airplane",
      altitude: 100,
      scale: 0.5,
      accidents: [
        {
          coordinates: [51.41578331391091, 35.72762253525313],
          duration: 30000, // 30 seconds
          message: "این هواپیما دچار مشکل فنی شده و برای 30 ثانیه متوقف است",
        },
      ],
      route: [
        [51.4107518760224, 35.73372640732208],
        [51.41335145226475, 35.73440710755406],
        [51.41578331391091, 35.72762253525313],
        [51.41357507172708, 35.72723677297601],
        [51.4107518760224, 35.73372640732208],
      ],
    },
    {
      id: "sat-1",
      url: "/models/satellite.glb",
      icon: "/models/satellite-icon.png",
      color: "#00ffaa",
      type: "satellite",
      speed: 7000,
      tle: {
        line1:
          "1 25544U 98067A   24257.12345678  .00001264  00000-0  29621-4 0  9991",
        line2:
          "2 25544  51.6442  21.8765 0007291  32.5541  84.1247 15.48987654321689",
      },
      altitudeOffset: 500000,
      scale: 60000,
    },

    {
      id: "moto-1",
      url: "/models/motor.glb",
      icon: "/models/motor-icon.png",
      color: "#00c1ff",
      speed: 0.0001,
      type: "vehicle",
      scale: 0.09,
      route: [
        [51.41565624315484, 35.72398305720331],
        [51.415823857207386, 35.72398545982645],
        [51.415951619644716, 35.72398699568002],
        [51.416054130068204, 35.72399473420495],
        [51.41613197270067, 35.72402579416011],
        [51.41621152646644, 35.72407936488162],
        [51.41625908425007, 35.724145172199144],
        [51.41628577134881, 35.72422142207789],
        [51.416262860665114, 35.72433095980033],
        [51.41620482614738, 35.724527112732375],
        [51.416153551777, 35.72469207883974],
        [51.416097860046904, 35.72488117839535],
        [51.41604895828118, 35.725041594018506],
        [51.41599482529227, 35.72522390014515],
        [51.41593791257398, 35.725412805223456],
        [51.41585321303691, 35.72569710768748],
        [51.415786987689984, 35.72591681523977],
        [51.41574788414522, 35.726039618245736],
        [51.41573185074387, 35.726112714772526],
        [51.41571041239686, 35.72625009842649],
        [51.41568521902127, 35.72642348718085],
        [51.41566423921421, 35.72655451636392],
        [51.41562435108969, 35.72683619405694],
        [51.41557475183254, 35.72717427750908],
        [51.415528276149814, 35.72731770670062],
        [51.415444146151884, 35.727430577417095],
        [51.41530706185125, 35.72749226337605],
        [51.415205620236605, 35.72754844734315],
        [51.41517361415248, 35.727562505669056],
        [51.414974212740816, 35.72751075733973],
        [51.41480835373585, 35.72746828461092],
        [51.41466469882181, 35.72742889448436],
        [51.41450526652602, 35.727387981224695],
        [51.41425569608185, 35.72732180199341],
        [51.414083797145906, 35.727274443802926],
        [51.413919207637576, 35.72723343346216],
        [51.41381299571495, 35.72721800645496],
        [51.41368510916925, 35.727218043373185],
        [51.413605553208555, 35.72725666406512],
        [51.413533744951536, 35.72734855807039],
        [51.4134907142014, 35.72745904489129],
        [51.41342890275581, 35.72762518821045],
        [51.41338181515721, 35.727758307690635],
        [51.41333665048319, 35.72787037459257],
        [51.41330376966914, 35.72795621747855],
        [51.41323623248866, 35.72811232706994],
        [51.41317198064965, 35.72825573075316],
        [51.413111471616475, 35.72838970530955],
        [51.41298986119634, 35.728630941154805],
        [51.412879751210596, 35.72885122093794],
        [51.41276711846828, 35.729083193688865],
        [51.412645820073664, 35.72932661560239],
        [51.412504999548844, 35.72963581362352],
        [51.41234631803772, 35.7299635124068],
        [51.41217510165262, 35.730322898530204],
        [51.412011512058456, 35.73066271882418],
        [51.41189784632792, 35.73089171687489],
        [51.411736462419526, 35.73124480930237],
        [51.41162131737215, 35.731482889358304],
        [51.411495239766026, 35.73172666942703],
        [51.41134535239229, 35.73202595019902],
        [51.41123129018587, 35.73226556606852],
        [51.41107719730698, 35.7326086886179],
        [51.410901124619755, 35.732984610073984],
        [51.410774644085706, 35.73325018956599],
        [51.41063587948287, 35.733544469575065],
        [51.41050962804718, 35.733815346919314],
        [51.41036784712975, 35.73414964085214],
        [51.4103235484294, 35.73425340162851],
      ].map((model) => {
        if (model.type === "satellite" && !model.speed && model.tle) {
          try {
            model.speed = getSpeedFromTLE(model.tle.line1, model.tle.line2);
          } catch (err) {
            console.warn("Failed to calculate speed form TLE : ", err);
            model.speed = 0;
          }
        }
      }),
    },
  ],
  chasedModelId: null,
  activeAccidents: {}, // Track active accidents by model ID
};

const modelsSlice = createSlice({
  name: "models",
  initialState,
  reducers: {
    updateModelSpeed: (state, action) => {
      const { id, speed } = action.payload;
      const model = state.models.find((m) => m.id === id);
      if (model) model.speed = speed;
    },
    setChasedModel: (state, action) => {
      state.chasedModelId = action.payload;
    },
    startAccident: (state, action) => {
      const { modelId, accident, startTime } = action.payload;
      state.activeAccidents[modelId] = {
        ...accident,
        startTime: startTime || Date.now(),
        isActive: true,
      };
    },
    endAccident: (state, action) => {
      const modelId = action.payload;
      delete state.activeAccidents[modelId];
    },
  },
});

export const { updateModelSpeed, setChasedModel, startAccident, endAccident } =
  modelsSlice.actions;
export default modelsSlice.reducer;
